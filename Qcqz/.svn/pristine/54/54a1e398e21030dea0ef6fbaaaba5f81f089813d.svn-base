package com.qcqz.web.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.qcqz.pageModel.Json;
import com.qcqz.pageModel.Property;
import com.qcqz.service.PropertyService;

@Controller
@RequestMapping("/property")
public class PropertyController extends BaseController {
	@Autowired
	private PropertyService propsertyService;
	

	@RequestMapping(value = "/doNotNeedSession_treeRecursive", method = RequestMethod.POST)
	@ResponseBody
	public Object doNotNeedSession_treeRecursive(Property dept) {
		return propsertyService.tree(dept, true);
	}
	
	@RequestMapping(value = "/doNotNeedSession_tree", method = RequestMethod.POST)
	@ResponseBody
	public Object doNotNeedSession_tree(Property dept) {
		return propsertyService.tree(dept, false);
	}
	
	@RequestMapping(value = "/propertyEdit", method = RequestMethod.GET)
	public ModelAndView propertyEdit(HttpServletRequest request){
		return new ModelAndView("/dataEnter/propertyEdit");
	}
	
	@RequestMapping(value = "/propertyAdd", method = RequestMethod.GET)
	public ModelAndView propertyAdd(HttpServletRequest request){
		return new ModelAndView("/dataEnter/propertyAdd");
	}
	
	@RequestMapping(value = "/getAll", method = RequestMethod.POST)
	@ResponseBody
	public Object getAll(Property dept) {
		return generateJson(propsertyService.treegrid(dept));
	}
	@RequestMapping(value = "/getPropertyByPId", method = RequestMethod.GET)
	@ResponseBody
	public Object getPropertyByPId(HttpServletRequest request) {
		String pid = request.getParameter("pid");
		Property dept = new Property();
		dept.setId(pid);
		return generateJson(propsertyService.treegrid(dept));
	}
	
	@RequestMapping(value = "/deleteProperty", method = RequestMethod.POST)
	@ResponseBody
	public Object delete(Property dept) {
		Json j = new Json();
		try {
			propsertyService.delete(dept);
			j.setSuccess(true);
			j.setMsg("删除成功！");
			j.setObj(dept.getCid());
		} catch (Exception e) {
			j.setMsg("删除失败！部门已使用!");
		}
		return j;
	}
	
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	@ResponseBody
	public Object add(Property dept) {
		Json j = new Json();
		try {
			propsertyService.add(dept);
			j.setSuccess(true);
			j.setMsg("添加成功！");
		} catch (Exception e) {
			j.setMsg("添加失败！");
		}
		return j;
	}
	
	@RequestMapping(value = "/edit", method = RequestMethod.POST)
	@ResponseBody
	public Object edit(Property dept) {
		Json j = new Json();
		try {
			propsertyService.edit(dept);
			j.setSuccess(true);
			j.setMsg("编辑成功!");
		} catch (Exception e) {
			j.setMsg("编辑失败！");
		}
		return j;
	}
}
