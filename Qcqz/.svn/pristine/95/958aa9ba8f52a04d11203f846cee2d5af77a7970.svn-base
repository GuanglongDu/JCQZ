<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 自动扫描com.qcqz.web包下的@Controller标注的类控制器类 -->
	<context:component-scan base-package="com.qcqz.web" />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven />

	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="100" p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/html" p:suffix=".jsp" />

	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" />

	<!-- 国际化 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="i18n/messages" />

	<!-- 定义数据转换器 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"
		p:messageConverters-ref="messageConverters">
	</bean>
	<util:list id="messageConverters">
		<bean
			class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
		<bean
			class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
		<bean class="org.springframework.http.converter.StringHttpMessageConverter" >
		<property name="supportedMediaTypes">  
                    <list>  
                        <value>text/plain;charset=UTF-8</value>  
                    </list>  
                </property>
         </bean>
		<bean
			class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
	</util:list>
	
	<!--异常统一处理-->
	<bean id="handlerExceptionResolver" class="com.qcqz.exception.QcqzExceptionHandler" p:order="2" >
    	<!-- from ExceptionHandler -->
        <property name="ajaxErrorView" value="/exception/ajaxexception" />
        <property name="ajaxShowTechMessage" value="true"/>
        
        <!-- from SimpleMappingExceptionResolver -->
        <property name="defaultErrorView" value="checked"/>
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.RuntimeException" >
                    unchecked
                </prop>
            </props>
        </property>
    </bean> 
    
		<mvc:interceptors>    
        <mvc:interceptor>    
            <!-- 匹配的是url路径  -->  
            <mvc:mapping path="/" />  
            <mvc:mapping path="/user/**" />  
            <mvc:mapping path="/dept/**" />  
            <mvc:mapping path="/auth/**" />
            <mvc:mapping path="/role/**" />
            <mvc:mapping path="/menu/**" />
               
            <bean class="com.qcqz.interceptor.SessionInterceptor"></bean>
              
        </mvc:interceptor>  
         <mvc:interceptor> 
          <mvc:mapping path="/" />
          <mvc:mapping path="/user/**" />  
            <mvc:mapping path="/dept/**" />  
            <mvc:mapping path="/auth/**" />
            <mvc:mapping path="/role/**" />
            <mvc:mapping path="/menu/**" />  
          <bean class="com.qcqz.interceptor.AuthInterceptor"></bean>    
          </mvc:interceptor> 
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
    </mvc:interceptors>
    
	<!-- spring mvc对静态资源的访问 -->
	<mvc:resources location="/image/" mapping="/image/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/easyui/" mapping="/easyui/**" />
	<mvc:resources location="/json/" mapping="/json/**" />
	<mvc:resources location="/json/" mapping="/json/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
</beans>
